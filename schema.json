{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/schemas/cli-spec.schema.json",
  "title": "Style-agnostic CLI Specification",
  "type": "object",
  "required": ["cli", "behavior", "commands"],
  "additionalProperties": false,
  "properties": {
    "cli": { "$ref": "#/$defs/cliMeta" },
    "behavior": { "$ref": "#/$defs/behavior" },
    "global_options": {
      "type": "array",
      "items": { "$ref": "#/$defs/arg" },
      "default": []
    },
    "commands": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/command" }
    },
    "types": { "$ref": "#/$defs/typeRegistryRoot" },
    "rendering": { "$ref": "#/$defs/rendering" },
    "lifecycle": { "$ref": "#/$defs/lifecycle" }
  },

  "$defs": {
    "styleEnum": {
      "enum": ["unix", "verb-noun", "noun-verb", "shell"]
    },

    "cliMeta": {
      "type": "object",
      "required": ["id", "name", "version", "default_style"],
      "additionalProperties": false,
      "properties": {
        "id": { "type": "string", "minLength": 1 },
        "name": { "type": "string", "minLength": 1 },
        "version": { "type": "string", "minLength": 1 },
        "description_short": { "type": "string" },
        "description_long": { "type": "string" },
        "license": { "type": "string" },
        "homepage": { "type": "string", "format": "uri" },
        "default_style": { "$ref": "#/$defs/styleEnum" },
        "styles_supported": {
          "type": "array",
          "items": { "$ref": "#/$defs/styleEnum" },
          "uniqueItems": true
        },
        "i18n": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "default_locale": { "type": "string" },
            "strings": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          }
        }
      }
    },

    "behavior": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allow_abbrev": { "type": "boolean", "default": false },
        "stop_at_positional": { "type": "boolean", "default": true },
        "env_prefix": { "type": "string", "default": "" },
        "completion": {
          "type": "array",
          "items": { "enum": ["bash", "zsh", "fish", "powershell"] },
          "uniqueItems": true,
          "default": []
        },
        "color": { "enum": ["auto", "always", "never"], "default": "auto" },
        "pager": { "type": "boolean", "default": false },
        "telemetry": { "type": "boolean", "default": false },
        "exit_codes": {
          "type": "object",
          "description": "Symbolic name -> numeric exit code",
          "additionalProperties": { "type": "integer" }
        },
        "io": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "stdin": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "accepts": { "type": "boolean", "default": false },
                "when": {
                  "type": "array",
                  "items": { "type": "string" },
                  "default": []
                }
              }
            },
            "stdout": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "default": {
                  "enum": ["text", "table", "json", "yaml", "ndjson", "binary"],
                  "default": "text"
                }
              }
            },
            "stderr": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "diagnostics": { "type": "boolean", "default": true }
              }
            },
            "pipes_and_redirection": { "type": "boolean", "default": true }
          }
            }
      }
    },

    "rendering": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "usage_templates": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "unix": { "type": "string" },
            "verb-noun": { "type": "string" },
            "noun-verb": { "type": "string" },
            "shell": { "type": "string" }
          }
        },
        "table": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "borders": { "type": "boolean" },
            "truncate": { "type": "boolean" }
          }
        },
        "json": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "pretty": { "type": "boolean" }
          }
        },
        "help": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "wrap": { "type": "integer", "minimum": 40, "maximum": 200 },
            "show_defaults": { "type": "boolean" },
            "show_env": { "type": "boolean" }
          }
        },
        "aliases": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "allow_command_aliases": { "type": "boolean" },
            "allow_option_aliases": { "type": "boolean" }
          }
        }
      }
    },

    "lifecycle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "deprecated_commands": {
          "type": "array",
          "items": { "type": "string" },
          "default": []
        },
        "experimental_commands": {
          "type": "array",
          "items": { "type": "string" },
          "default": []
        },
        "features": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["id", "status"],
            "properties": {
              "id": { "type": "string" },
              "status": { "enum": ["experimental", "stable", "deprecated"] },
              "since": { "type": "string" },
              "notes": { "type": "string" }
            }
          },
          "default": []
        }
      }
    },

    "typeRegistryRoot": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "registry": {
          "type": "object",
          "description": "Named, reusable type definitions",
          "additionalProperties": { "$ref": "#/$defs/typeDef" },
          "default": {}
        }
      }
    },

    "typeDef": {
      "type": "object",
      "additionalProperties": false,
      "required": ["kind"],
      "properties": {
        "kind": {
          "enum": [
            "any","boolean","string","integer","number","decimal",
            "enum","list","object",
            "date","datetime","url","json",
            "path","file","dir"
          ]
        },
        "values": {
          "type": "array",
          "items": { "type": ["string","number","integer","boolean"] }
        },
        "of": { "type": "string", "description": "Name of another type for list/of" },
        "format": {
          "type": "string",
          "description": "Additional format hint (e.g., regex name or RFC3339)",
          "enum": [
            "date","date-time","uri","email","hostname","ipv4","ipv6",
            "json","path","file","dir"
          ]
        },
        "constraints": {
          "type": "object",
          "description": "Type-specific constraints",
          "additionalProperties": true,
          "properties": {
            "min": { "type": "number" },
            "max": { "type": "number" },
            "pattern": { "type": "string", "format": "regex" },
            "choices_case_sensitive": { "type": "boolean" },
            "exists": { "enum": ["any","file","dir","none"] },
            "relativity": { "enum": ["relative","absolute","any"] }
          }
        },
        "examples": {
          "type": "array",
          "items": { "type": "string" }
        },
        "description": { "type": "string" }
      }
    },

    "example": {
      "type": "object",
      "additionalProperties": false,
      "required": ["cmd"],
      "properties": {
        "cmd": { "type": "string" },
        "description": { "type": "string" }
      }
    },

    "constraints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "requires": {
          "type": "array",
          "description": "IDs or names required to be present",
          "items": { "type": "string" },
          "default": []
        },
        "conflicts": {
          "type": "array",
          "description": "Each inner array lists two or more mutually exclusive items",
          "items": {
            "type": "array",
            "minItems": 2,
            "items": { "type": "string" }
          },
          "default": []
        },
        "exactly_one_of": {
          "type": "array",
          "description": "Exactly one from each inner set must be provided",
          "items": {
            "type": "array",
            "minItems": 2,
            "items": { "type": "string" }
          },
          "default": []
        },
        "at_least_one_of": {
          "type": "array",
          "description": "At least one from each inner set must be provided",
          "items": {
            "type": "array",
            "minItems": 2,
            "items": { "type": "string" }
          },
          "default": []
        },
        "custom": {
          "type": "array",
          "description": "Custom predicates (implementation-defined)",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["message", "predicate"],
            "properties": {
              "message": { "type": "string" },
              "predicate": { "type": "string" }
            }
          },
          "default": []
        }
      }
    },

    "ioHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "stdin": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "accepts": { "type": "boolean" },
            "when": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        },
        "stdout": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "default": {
              "enum": ["text", "table", "json", "yaml", "ndjson", "binary"]
            }
          }
        },
        "stderr": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "diagnostics": { "type": "boolean" }
          }
        }
      }
    },

    "argCommon": {
      "type": "object",
      "additionalProperties": true,
      "required": ["id", "description_short"],
      "properties": {
        "id": { "type": "string", "minLength": 1 },
        "description_short": { "type": "string" },
        "description_long": { "type": "string" },
        "required": { "type": "boolean", "default": false },
        "hidden": { "type": "boolean", "default": false },
        "deprecated_since": { "type": "string" },
        "env": { "type": "string" },
        "default": {},
        "type": {
          "description": "Either a named type from the registry or an inline typeDef",
          "oneOf": [
            { "type": "string" },
            { "$ref": "#/$defs/typeDef" }
          ]
        },
        "arity": {
          "type": "string",
          "description": "Cardinality like '1', '0..1', '1..*', '0..*'",
          "pattern": "^(\\*|\\d+|\\d+\\.\\.\\d+|\\d+\\.\\.\\*|0\\.\\.\\*|0\\.\\.1)$",
          "default": "1"
        },
        "validator": { "type": "string", "description": "Regex name or function id" },
        "examples": {
          "type": "array",
          "items": { "$ref": "#/$defs/example" },
          "default": []
        },
        "value_name": { "type": "string" }
      }
    },

    "arg": {
      "allOf": [
        { "$ref": "#/$defs/argCommon" },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["names", "kind"],
          "properties": {
            "names": {
              "type": "array",
              "minItems": 1,
              "items": { "type": "string", "minLength": 1 },
              "description": "Short/long/alias names, e.g., ['-h','--help','?']"
            },
            "kind": { "enum": ["flag", "option"] },
            "takes_value": { "type": "boolean" },
            "repeatable": { "type": "boolean", "default": false }
          },
          "allOf": [
            {
              "if": { "properties": { "kind": { "const": "flag" } }, "required": ["kind"] },
              "then": {
                "properties": { "takes_value": { "const": false } },
                "required": []
              }
            },
            {
              "if": { "properties": { "kind": { "const": "option" } }, "required": ["kind"] },
              "then": {
                "properties": { "takes_value": { "const": true } },
                "required": ["type"]
              }
            }
          ]
        }
      ]
    },

    "argPositional": {
      "allOf": [
        { "$ref": "#/$defs/argCommon" },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["name", "kind"],
          "properties": {
            "name": { "type": "string", "minLength": 1 },
            "kind": { "const": "positional" }
          }
        }
      ]
    },

    "command": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "names", "description_short"],
      "properties": {
        "id": { "type": "string", "minLength": 1 },
        "names": {
          "type": "array",
          "minItems": 1,
          "items": { "type": "string", "minLength": 1 }
        },
        "description_short": { "type": "string" },
        "description_long": { "type": "string" },
        "hidden": { "type": "boolean", "default": false },
        "examples": {
          "type": "array",
          "items": { "$ref": "#/$defs/example" },
          "default": []
        },
        "options": {
          "type": "array",
          "items": { "$ref": "#/$defs/arg" },
          "default": []
        },
        "positionals": {
          "type": "array",
          "items": { "$ref": "#/$defs/argPositional" },
          "default": []
        },
        "subcommands": {
          "type": "array",
          "items": { "$ref": "#/$defs/command" },
          "default": []
        },
        "constraints": { "$ref": "#/$defs/constraints" },
        "io": { "$ref": "#/$defs/ioHints" }
      }
    }
  }
}

