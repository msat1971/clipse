{
  "cli": {
    "id": "clipse",
    "name": "clipse",
    "version": "0.1.0",
    "description_short": "One schema, every CLI style.",
    "description_long": "Clipse defines commands once and renders them as unix, verb–noun, noun–verb, or shell styles.",
    "license": "Apache-2.0",
    "homepage": "https://example.com/clipse",
    "default_style": "verb-noun",
    "styles_supported": ["unix", "verb-noun", "noun-verb", "shell"],
    "i18n": {
      "default_locale": "en",
      "strings": {
        "help_header": "Usage",
        "global_options_header": "Global Options"
      }
    }
  },

  "behavior": {
    "allow_abbrev": false,
    "stop_at_positional": true,
    "env_prefix": "CLIPSE_",
    "completion": ["bash", "zsh", "fish"],
    "color": "auto",
    "pager": false,
    "telemetry": false,
    "exit_codes": {
      "ok": 0,
      "usage": 2,
      "config_error": 78,
      "runtime_error": 1
    },
    "io": {
      "stdin": { "accepts": false, "when": [] },
      "stdout": { "default": "text" },
      "stderr": { "diagnostics": true },
      "pipes_and_redirection": true
    }
  },

  "types": {
    "registry": {
      "any": { "kind": "any" },
      "boolean": { "kind": "boolean" },
      "count": { "kind": "integer", "min": 0 },
      "string": { "kind": "string" },
      "integer": { "kind": "integer" },
      "number": { "kind": "number" },
      "decimal": { "kind": "decimal", "constraints": { "min": 0 } },
      "date": { "kind": "date", "format": "date" },
      "datetime": { "kind": "datetime", "format": "date-time" },
      "url": { "kind": "url", "format": "uri" },
      "json": { "kind": "json", "format": "json" },

      "path": {
        "kind": "path",
        "format": "path",
        "constraints": { "exists": "any", "relativity": "any" }
      },
      "rel_path": {
        "kind": "path",
        "format": "path",
        "description": "Relative path only.",
        "constraints": { "exists": "any", "relativity": "relative" }
      },
      "abs_dir": {
        "kind": "dir",
        "format": "path",
        "description": "Absolute directory path that must exist.",
        "constraints": { "exists": "dir", "relativity": "absolute" }
      },
      "file_must_exist": {
        "kind": "file",
        "format": "path",
        "constraints": { "exists": "file", "relativity": "any" }
      },

      "format_enum": {
        "kind": "enum",
        "values": ["png", "jpg", "webp", "gif"],
        "description": "Supported image formats."
      },
      "verbosity_enum": {
        "kind": "enum",
        "values": ["quiet", "normal", "debug"]
      },

      "string_list": { "kind": "list", "of": "string" },
      "path_list": { "kind": "list", "of": "path" }
    }
  },

  "rendering": {
    "usage_templates": {
      "unix": "{prog} [GLOBAL_OPTS] [COMMAND] [SUBCOMMAND] [OPTS] [ARGS]...",
      "verb-noun": "{prog} <verb> <noun> [OPTS] [ARGS]",
      "noun-verb": "{prog} <noun> <verb> [OPTS] [ARGS]",
      "shell": "{prog}> <command> [OPTS] [ARGS]"
    },
    "table": { "borders": false, "truncate": true },
    "json": { "pretty": true },
    "help": { "wrap": 100, "show_defaults": true, "show_env": true },
    "aliases": { "allow_command_aliases": true, "allow_option_aliases": true }
  },

  "lifecycle": {
    "deprecated_commands": ["project.old-init"],
    "experimental_commands": ["auth.login"],
    "features": [
      { "id": "templates", "status": "stable", "since": "0.1.0", "notes": "Starter templates available." }
    ]
  },

  "global_options": [
    {
      "id": "help",
      "names": ["-h", "--help", "?"],
      "kind": "flag",
      "takes_value": false,
      "type": "boolean",
      "description_short": "Show help and exit.",
      "description_long": "Display usage information for this command and exit."
    },
    {
      "id": "verbose",
      "names": ["-v", "--verbose"],
      "kind": "flag",
      "takes_value": false,
      "type": "count",
      "description_short": "Increase verbosity (repeatable).",
      "default": 0
    },
    {
      "id": "output_format",
      "names": ["-o", "--output"],
      "kind": "option",
      "takes_value": true,
      "value_name": "FORMAT",
      "type": "format_enum",
      "description_short": "Select output image format.",
      "env": "CLIPSE_OUTPUT",
      "default": "png"
    },
    {
      "id": "mode",
      "names": ["--mode"],
      "kind": "option",
      "takes_value": true,
      "type": { "kind": "enum", "values": ["quiet", "normal", "debug"] },
      "description_short": "Verbosity mode (enum inline).",
      "default": "normal"
    }
  ],

  "commands": [
    {
      "id": "root",
      "names": ["clipse"],
      "description_short": "Top-level entry point.",
      "description_long": "Root command used for single-command (unix) mode and as a parent for subcommands.",
      "examples": [
        { "cmd": "clipse --help", "description": "Show global help." }
      ],
      "subcommands": [
        {
          "id": "project",
          "names": ["project"],
          "description_short": "Manage projects.",
          "examples": [
            { "cmd": "clipse project --help", "description": "Project help." }
          ],
          "subcommands": [
            {
              "id": "create",
              "names": ["create", "new"],
              "description_short": "Create a project.",
              "description_long": "Create a new project using a template or a configuration file.",
              "examples": [
                {
                  "cmd": "clipse project create --name demo --dir /opt/demo --template web ./extra1 ./extra2",
                  "description": "Create a web project with two extra files."
                },
                {
                  "cmd": "clipse project create --from-config ./proj.json",
                  "description": "Create from JSON config, reading params from file."
                }
              ],
              "options": [
                {
                  "id": "name",
                  "names": ["-n", "--name"],
                  "kind": "option",
                  "takes_value": true,
                  "value_name": "NAME",
                  "required": true,
                  "type": "string",
                  "description_short": "Project name."
                },
                {
                  "id": "dir",
                  "names": ["-d", "--dir"],
                  "kind": "option",
                  "takes_value": true,
                  "value_name": "DIR",
                  "type": "abs_dir",
                  "default": "/tmp",
                  "description_short": "Target directory (absolute, must exist).",
                  "env": "CLIPSE_DIR"
                },
                {
                  "id": "template",
                  "names": ["-t", "--template"],
                  "kind": "option",
                  "takes_value": true,
                  "value_name": "TEMPLATE",
                  "type": { "kind": "enum", "values": ["basic", "web", "api"] },
                  "description_short": "Project template."
                },
                {
                  "id": "from_config",
                  "names": ["--from-config"],
                  "kind": "option",
                  "takes_value": true,
                  "value_name": "FILE",
                  "type": "file_must_exist",
                  "description_short": "Create from a JSON config file.",
                  "description_long": "Parameters are read from FILE. Conflicts with explicit template/paths.",
                  "env": "CLIPSE_CONFIG"
                },
                {
                  "id": "yes",
                  "names": ["-y", "--yes"],
                  "kind": "flag",
                  "takes_value": false,
                  "type": "boolean",
                  "description_short": "Assume yes to all prompts (non-interactive)."
                },
                {
                  "id": "stdin_mode",
                  "names": ["--from-stdin"],
                  "kind": "flag",
                  "takes_value": false,
                  "type": "boolean",
                  "description_short": "Read project spec from STDIN (JSON)."
                }
              ],
              "positionals": [
                {
                  "id": "extra_files",
                  "name": "EXTRA_FILES",
                  "kind": "positional",
                  "type": "path_list",
                  "arity": "0..*",
                  "description_short": "Optional extra files to include."
                }
              ],
              "constraints": {
                "requires": ["-n", "--name"],
                "conflicts": [
                  ["--from-config", "--template"],
                  ["--from-config", "-t"],
                  ["--from-config", "EXTRA_FILES"]
                ],
                "exactly_one_of": [
                  ["--template", "--from-config"]
                ],
                "at_least_one_of": [
                  ["--dir", "--from-config"]
                ],
                "custom": [
                  {
                    "message": "When --from-stdin is set, omit EXTRA_FILES.",
                    "predicate": "if(--from-stdin) then missing(EXTRA_FILES)"
                  }
                ]
              },
              "io": {
                "stdin": { "accepts": true, "when": ["flag:--from-stdin"] },
                "stdout": { "default": "text" },
                "stderr": { "diagnostics": true }
              }
            },
            {
              "id": "delete",
              "names": ["delete", "rm"],
              "description_short": "Delete a project.",
              "options": [
                {
                  "id": "force",
                  "names": ["-f", "--force"],
                  "kind": "flag",
                  "takes_value": false,
                  "type": "boolean",
                  "description_short": "Skip confirmation."
                }
              ],
              "positionals": [
                {
                  "id": "project_ref",
                  "name": "PROJECT",
                  "kind": "positional",
                  "type": "string",
                  "required": true,
                  "description_short": "Project name or ID."
                }
              ],
              "constraints": {
                "requires": [],
                "conflicts": []
              },
              "io": {
                "stdin": { "accepts": false },
                "stdout": { "default": "text" }
              }
            }
          ]
        },
        {
          "id": "auth",
          "names": ["auth"],
          "description_short": "Authentication commands.",
          "subcommands": [
            {
              "id": "login",
              "names": ["login"],
              "description_short": "Authenticate user.",
              "options": [
                {
                  "id": "token",
                  "names": ["--token"],
                  "kind": "option",
                  "takes_value": true,
                  "type": "string",
                  "description_short": "Use an existing token.",
                  "env": "CLIPSE_TOKEN"
                }
              ],
              "constraints": {
                "conflicts": [],
                "requires": []
              },
              "examples": [
                { "cmd": "clipse auth login --token $CLIPSE_TOKEN" }
              ]
            }
          ]
        }
      ]
    }
  ]
}

